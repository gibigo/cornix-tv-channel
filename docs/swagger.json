{
    "swagger": "2.0",
    "info": {
        "title": "Cornix-TV-Channel API",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/gibigo/cornix-tv-channel/blob/master/LICENSE"
        },
        "version": "1.0"
    },
    "host": "https://yourforwarder.io",
    "basePath": "/api/v1",
    "paths": {
        "/channels": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get all channels of the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Get all channels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Channel"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create a new channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Create a channel",
                "parameters": [
                    {
                        "description": "User to create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AddUser"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/strategies": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create a new strategy for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "strategies"
                ],
                "summary": "Create a new strategy",
                "parameters": [
                    {
                        "description": "Strategy to create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AddStrategy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Strategy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the current user, can be used to verify the user exists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get the current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Change the current users setting. The request body must contain either a new name or a new password. If both, the username and the password get changed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Change the current users setting",
                "parameters": [
                    {
                        "description": "Userupdate",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AddUser"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User to create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AddUser"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "501": {
                        "description": "if user registration is disabled on the server",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete the current user",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.AddStrategy": {
            "type": "object",
            "properties": {
                "allowCounter": {
                    "type": "boolean"
                },
                "entires": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Entry"
                    }
                },
                "sl": {
                    "$ref": "#/definitions/types.SL"
                },
                "tps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TP"
                    }
                }
            }
        },
        "types.AddUser": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.Channel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Strategy"
                    }
                },
                "telegramId": {
                    "type": "integer"
                }
            }
        },
        "types.Entry": {
            "type": "object",
            "properties": {
                "diff": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "targetStrategyID": {
                    "type": "integer"
                },
                "zoneStrategyID": {
                    "type": "integer"
                }
            }
        },
        "types.GetUser": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.SL": {
            "type": "object",
            "properties": {
                "diff": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "targetStrategyID": {
                    "type": "integer"
                },
                "zoneStrategyID": {
                    "type": "integer"
                }
            }
        },
        "types.Strategy": {
            "type": "object",
            "properties": {
                "allowCounter": {
                    "type": "boolean"
                },
                "channelID": {
                    "type": "integer"
                },
                "coin": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isTargetStrategy": {
                    "type": "boolean"
                },
                "isZoneStrategy": {
                    "type": "boolean"
                },
                "targetStrategy": {
                    "$ref": "#/definitions/types.TargetStrategy"
                },
                "userID": {
                    "type": "integer"
                },
                "zoneStrategy": {
                    "$ref": "#/definitions/types.ZoneStrategy"
                }
            }
        },
        "types.TP": {
            "type": "object",
            "properties": {
                "diff": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "targetStrategyID": {
                    "type": "integer"
                },
                "zoneStrategyID": {
                    "type": "integer"
                }
            }
        },
        "types.TargetStrategy": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Entry"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "isBreakout": {
                    "type": "boolean"
                },
                "sl": {
                    "$ref": "#/definitions/types.SL"
                },
                "strategyID": {
                    "type": "integer"
                },
                "tps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TP"
                    }
                }
            }
        },
        "types.ZoneStrategy": {
            "type": "object",
            "properties": {
                "entryStart": {
                    "type": "number"
                },
                "entryStop": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "isBreakout": {
                    "type": "boolean"
                },
                "sl": {
                    "$ref": "#/definitions/types.SL"
                },
                "strategyID": {
                    "type": "integer"
                },
                "tps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TP"
                    }
                }
            }
        },
        "utils.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "error"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}